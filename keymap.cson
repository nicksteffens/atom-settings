# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
'atom-text-editor':
  'esc': 'core:cancel'
#
# 'atom-workspace':
#   'cmd-k ctrl-shift-left': 'pane:move-item-left'
#   'cmd-k ctrl-shift-right': 'pane:move-item-right'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# ===
# Emmet
# ===
# - Mustache
'atom-text-editor[data-grammar="text html mustache"]:not([mini])':
    'tab': 'emmet:expand-abbreviation-with-tab'
# - Handelbars
'atom-text-editor[data-grammar="text html handlebars"]:not([mini])':
    'tab': 'emmet:expand-abbreviation-with-tab'
# - Typescript
'atom-text-editor[data-grammar~="ts"]:not([mini])':
    'tab': 'emmet:expand-abbreviation-with-tab'
# - JSX
'atom-text-editor[data-grammar~="jsx"]:not([mini])':
    'tab': 'emmet:expand-abbreviation-with-tab'
